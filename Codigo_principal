// Código final para a estação meteorológica

    // Inclusão de bibliotecas:
#include "DHT.h"
#include <Wire.h> // biblioteca para comunicacao I²C
#include <LiquidCrystal_I2C.h> // biblioteca do LCD com I²C
#include <SPI.h>
#include <Adafruit_BMP280.h>

    // Criação de elementos:
// LCD - Visor
LiquidCrystal_I2C lcd(0x27,16,2); // endereço LCD I²C e qtde colunas e linhas

// DHT-22 - Sensor de umidade
#define DHTPIN 2 // O pino onde o DHT vai estar conectado
#define DHTTYPE DHT22 // DHT 22 (AM2302)
DHT dht(DHTPIN, DHTTYPE); // Criação do DHT
float umidade;

// BMP-280 - Sensor de pressão 
#define BMP_SCK  (13)
#define BMP_MISO (12)
#define BMP_MOSI (11)
#define BMP_CS   (10)
Adafruit_BMP280 bmp; // I2C
//Adafruit_BMP280 bmp(BMP_CS); // hardware SPI
//Adafruit_BMP280 bmp(BMP_CS, BMP_MOSI, BMP_MISO,  BMP_SCK);
float altitude;
float pressao;

// TMP-36 - Sensor de temperatura
int sensorValue = 0;
float volts;
float celsius;

// LDR - Sensor de luminosidade
int sensorValue2; double tensao, res, lum;

// Criando os caracteres especiais
byte graus[8]={
  B00110,
  B01001,
  B01001,
  B00110,
  B00000,
  B00000,
  B00000,
  B00000,
};
byte mais_menos[8]={
  B00100,
  B00100,
  B11111,
  B00100,
  B00100,
  B00000,
  B11111,
  B00000,
};
byte a_tio[8]={
  B01101,
  B10010,
  B01110,
  B00001,
  B01111,
  B10001,
  B01111,
  B00000,
};
byte o_com_acento_agudo[8]={
  B00010,
  B00100,
  B01110,
  B10001,
  B10001,
  B10001,
  B01110,
  B00000,
};
byte c_sidilha[8]={
  B00000,
  B00000,
  B01110,
  B10000,
  B10000,
  B01110,
  B00100,
  B01000,
};

// Início do código
void setup() {
  pinMode(A0, INPUT); // Definindo pino A0 como input
  pinMode(A1, INPUT); // Definindo pino A1 como input
  analogReference(INTERNAL); // Reduz fundo de escala a 1,1V, para diminuir resolução
  Serial.begin(9600); // Inicializa comunicação serial
  dht.begin(); // Inicializa sensor DHT
  // lcd.begin(16,2);
  lcd.init(); // Inicializa painel LCD
  lcd.backlight(); // Liga a luz de fundo do painel LCD
  while ( !Serial ) delay(100);   // wait for native usb
  //Serial.println(F("BMP280 test"));
  unsigned status;
  //status = bmp.begin(BMP280_ADDRESS_ALT, BMP280_CHIPID);
  status = bmp.begin(0x76);

  /* Default settings from datasheet. */
  bmp.setSampling(Adafruit_BMP280::MODE_NORMAL,     /* Operating Mode. */
                  Adafruit_BMP280::SAMPLING_X2,     /* Temp. oversampling */
                  Adafruit_BMP280::SAMPLING_X16,    /* Pressure oversampling */
                  Adafruit_BMP280::FILTER_X16,      /* Filtering. */
                  Adafruit_BMP280::STANDBY_MS_500); /* Standby time. */

  lcd.createChar(0,graus);
  lcd.createChar(1,mais_menos);
  lcd.createChar(2,a_tio);
  lcd.createChar(3,o_com_acento_agudo);
  lcd.createChar(4,c_sidilha);

  lcd.setCursor(4,0);
  lcd.print("Esta  o");
  lcd.setCursor(8,0);
  lcd.write(byte(4));
  lcd.setCursor(9,0);
  lcd.write(byte(2));
  lcd.setCursor(1,1);
  lcd.print("Meteorol gica");
  lcd.setCursor(9,1);
  lcd.write(byte(3));
  delay(5000);

  lcd.clear();

  lcd.setCursor(1,0);
  lcd.print("Produzido por:");

  lcd.setCursor(0,1);
  lcd.print("Gustavo T Braga");
  delay(3000);

  lcd.clear();

  lcd.setCursor(2,0);
  lcd.print("Henrique A A");
  lcd.setCursor(7,1);
  lcd.print("e");
  delay(3000);

  lcd.clear();

  lcd.setCursor(2,0);
  lcd.print("Jo o V Nunes");
  lcd.setCursor(4,0);
  lcd.write(byte(2));
  delay(3000);

  lcd.clear();
}


void loop() {
  // Sensor de Temperatura (TMP-36)
  sensorValue = analogRead(A0);
  volts = sensorValue * (1.1/ 1023.0);
  celsius = 97.37 * volts - 48.35;

  // Sensor de Umidade (DHT-22)
  umidade = 1.14* dht.readHumidity() - 7.44;

  // Sensor de Luminosidade (LDR)
  sensorValue2 = analogRead(A1); // Lê valor binário
  tensao = (sensorValue2 / 1023.0) * 1.1; // Conver em tensão
  res = (tensao * 51000.0) / (3.3 - tensao); // Resis. LDR
  lum = pow(10, 6.05 - 1.03 * log10(res)); // Converte em luminosidade

  // Sensor de Pressão (BMP-280)
  pressao = bmp.readPressure();
  altitude = bmp.readAltitude(1023.0);

  // Display (LCD)
  lcd.setCursor(2, 0);
  lcd.print("Temperatura:");
  lcd.setCursor(2, 1);
  lcd.print(celsius,1);
  lcd.setCursor(7,1);
  lcd.write(byte(1));
  lcd.setCursor(9,1);
  lcd.print("1.0");
  lcd.setCursor(13,1);
  lcd.write(byte(0));
  lcd.setCursor(14,1);
  lcd.print("C");
  
  delay(5000);

  lcd.clear();

  lcd.setCursor(4, 0);
  lcd.print("Umidade:");
  lcd.setCursor(4, 1);
  lcd.print(umidade,0);
  lcd.setCursor(7,1);
  lcd.write(byte(1));
  lcd.setCursor(9,1);
  lcd.print("2");
  lcd.setCursor(11,1);
  lcd.print("%");

  delay(5000);

  lcd.clear();

  lcd.setCursor(2, 0);
  lcd.print("Luminosidade:");
  lcd.setCursor(3, 1);
  lcd.print(lum);
  lcd.setCursor(11, 1);
  lcd.print("lx");

  delay(5000);

  lcd.clear();

  lcd.setCursor(4, 0);
  lcd.print("Press o:");
  lcd.setCursor(9,0);
  lcd.write(byte(2));
  lcd.setCursor(2, 1);
  lcd.print(pressao);
  lcd.setCursor(11, 1);
  lcd.print("Pa");

  delay(5000);

  lcd.clear();

  lcd.setCursor(4, 0);
  lcd.print("Altitude:");
  lcd.setCursor(4, 1);
  lcd.print(altitude);
  lcd.setCursor(11, 1);
  lcd.print("m");

  delay(5000);

  lcd.clear();
}
